@startuml
class LibraryManager {
    + main(String[]) : void
}
class OperationFactory {
    + getInstance(Operation) : LibraryOperation
}
enum Operation {
    + getOperation(int) : Operation
}

interface LibraryOperation {
    + execute() : void
}

LibraryManager --> Operation : getOperation
LibraryManager --> OperationFactory : getInstance
LibraryManager --> LibraryOperation : execute

class Library {
    - List<Book>
}
class Book

class SelectOperation {
    + execute() : void
}
enum SearchConditions {
    + getSearchConditions(int)
}

class InsertOperation {
    + execute() : void
}
enum InsertTarget

LibraryOperation <|.. SelectOperation
LibraryOperation <|.. InsertOperation

OperationFactory --> SelectOperation : new
OperationFactory --> InsertOperation : new

SelectOperation -- SearchConditions
InsertOperation -- InsertTarget

class LibraryService {
    + selectByConndition() : List<Library>
}

class BookService
class LibraryBookLinkService
class SqlBuilder

interface Dao {
    + select(String) : List<Library>
    + insert(String) : void
}
class LibraryDao {
    + select(String) : List<Library>
    + insert(String) : void
}
class BookDao {
    + select(String) : List<Library>
    + insert(String) : void
}
class LibraryBookLinkDao {
    + select(String) : List<Library>
    + insert(String) : void
}

Dao <|.. LibraryDao
Dao <|.. BookDao
Dao <|.. LibraryBookLinkDao

SelectOperation --> LibraryService
InsertOperation --> LibraryService
InsertOperation --> BookService
InsertOperation --> LibraryBookLinkService

LibraryService --> SqlBuilder
BookService --> SqlBuilder
LibraryBookLinkService --> SqlBuilder

LibraryService --> Dao
BookService --> Dao
LibraryBookLinkService --> Dao

@enduml
